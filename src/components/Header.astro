---
import { SEO } from "astro-seo";

const {title, description, image_link} = Astro.props;
const seo_title = "Thehigglers | " + title;
const seo_description =  description ;
const seo_image = "https://thehigglers.com" + image_link;
import '../styles/custom.css';
const isProductionMode = import.meta.env.MODE == "production" ? true :false;

---

<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/ico" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    {isProductionMode ? <script async src="https://www.googletagmanager.com/gtag/js?id=G-F7JNPQMNHW"></script> : ""}
    {isProductionMode ? <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'G-F7JNPQMNHW');
    </script> : ""}

    <!--Google Ads -->
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2333178679696939"
     crossorigin="anonymous"></script>

    <!-- Yandex.RTB -->
    <script>window.yaContextCb=window.yaContextCb||[]</script>
    <script src="https://yandex.ru/ads/system/context.js" async></script>

    {isProductionMode ? <script type="text/javascript">
      (function(c,l,a,r,i,t,y){
          c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
          t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
          y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
      })(window, document, "clarity", "script", "hb2yqs7zls");</script> : ''}
      <!-- Adding pagefind search -->
      <link href="/pagefind/pagefind-ui.css" rel="stylesheet">
      <script src="/pagefind/pagefind-ui.js" is:inline></script>
</head>
<head>
    <SEO
        title = {seo_title}
        description={seo_description} 
        openGraph={{
            basic: {
              title: seo_title,
              type: 'website',
              image: seo_image              
            },
            image: {
                url: seo_image,
                secureUrl: seo_image,
                type: "image/png"
              },
            optional: {
                description: seo_description

            }
          }}
          twitter={{
            card: 'summary_large_image',
            creator: "@tdnshah",
            title: seo_title,
            description: seo_description,
            image: import.meta.env.BASE_URL + "/" + seo_image
          }}
          extend={{
            // extending the default link tag
            link: [{ rel: "icon", href: "/favicon.ico" }],
            // extending the default meta tags
            meta: [
              {
                name: "twitter:image",
                content: seo_image,
              },
              { name: "twitter:title", content: seo_title },
              { name: "twitter:description", content: seo_description },
            ],
          }}
        />
</head>